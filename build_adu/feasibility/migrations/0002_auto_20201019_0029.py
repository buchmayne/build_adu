# Generated by Django 3.1.2 on 2020-10-19 00:29

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('feasibility', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AduPermits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ivr_number', models.BigIntegerField(blank=True, db_column='IVR_NUMBER', null=True)),
                ('application_number', models.TextField(blank=True, db_column='APPLICATION_NUMBER', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
                ('work', models.TextField(blank=True, db_column='WORK', null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('state_id', models.TextField(blank=True, db_column='STATE_ID', null=True)),
                ('property_id', models.TextField(blank=True, db_column='PROPERTY_ID', null=True)),
                ('set_up', models.TextField(blank=True, db_column='SET_UP', null=True)),
                ('under_review', models.TextField(blank=True, db_column='UNDER_REVIEW', null=True)),
                ('issued', models.TextField(blank=True, db_column='ISSUED', null=True)),
                ('final', models.TextField(blank=True, db_column='FINAL', null=True)),
                ('neighborhood', models.TextField(blank=True, db_column='NEIGHBORHOOD', null=True)),
                ('neighborhood_coalition', models.TextField(blank=True, db_column='NEIGHBORHOOD_COALITION', null=True)),
                ('business_association', models.TextField(blank=True, db_column='BUSINESS_ASSOCIATION', null=True)),
                ('county', models.TextField(blank=True, db_column='COUNTY', null=True)),
                ('x_web_mercator', models.FloatField(blank=True, db_column='X_WEB_MERCATOR', null=True)),
                ('y_web_mercator', models.FloatField(blank=True, db_column='Y_WEB_MERCATOR', null=True)),
                ('ccb_number', models.TextField(blank=True, db_column='CCB_NUMBER', null=True)),
                ('occupancy_group', models.TextField(blank=True, db_column='OCCUPANCY_GROUP', null=True)),
                ('construction_type', models.TextField(blank=True, db_column='CONSTRUCTION_TYPE', null=True)),
                ('submitted_valuation', models.FloatField(blank=True, db_column='SUBMITTED_VALUATION', null=True)),
                ('final_valuation', models.FloatField(blank=True, db_column='FINAL_VALUATION', null=True)),
                ('new_units', models.FloatField(blank=True, db_column='NEW_UNITS', null=True)),
                ('total_sqft', models.FloatField(blank=True, db_column='TOTAL_SQFT', null=True)),
                ('stories', models.FloatField(blank=True, db_column='STORIES', null=True)),
                ('customer', models.FloatField(blank=True, db_column='CUSTOMER', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3857)),
            ],
            options={
                'db_table': 'adu_permits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BgRents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid', models.TextField(blank=True, db_column='GEOID', null=True)),
                ('one_bed_rent_sf', models.FloatField(blank=True, null=True)),
                ('two_bed_rent_sf', models.FloatField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4269)),
            ],
            options={
                'db_table': 'bg_rents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Buildings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('bldg_id', models.TextField(blank=True, db_column='BLDG_ID', null=True)),
                ('state_id', models.TextField(blank=True, db_column='STATE_ID', null=True)),
                ('bldg_numb', models.BigIntegerField(blank=True, db_column='BLDG_NUMB', null=True)),
                ('bldg_name', models.TextField(blank=True, db_column='BLDG_NAME', null=True)),
                ('bldg_addr', models.TextField(blank=True, db_column='BLDG_ADDR', null=True)),
                ('bldg_type', models.TextField(blank=True, db_column='BLDG_TYPE', null=True)),
                ('bldg_use', models.TextField(blank=True, db_column='BLDG_USE', null=True)),
                ('bldg_sqft', models.FloatField(blank=True, db_column='BLDG_SQFT', null=True)),
                ('sqft_src', models.TextField(blank=True, db_column='SQFT_SRC', null=True)),
                ('sqft_conf', models.TextField(blank=True, db_column='SQFT_CONF', null=True)),
                ('num_story', models.FloatField(blank=True, db_column='NUM_STORY', null=True)),
                ('num_units', models.FloatField(blank=True, db_column='NUM_UNITS', null=True)),
                ('year_built', models.FloatField(blank=True, db_column='YEAR_BUILT', null=True)),
                ('ecoroof', models.TextField(blank=True, db_column='ECOROOF', null=True)),
                ('leed_rate', models.TextField(blank=True, db_column='LEED_RATE', null=True)),
                ('source', models.TextField(blank=True, db_column='SOURCE', null=True)),
                ('source_ref', models.TextField(blank=True, db_column='SOURCE_REF', null=True)),
                ('avg_height', models.FloatField(blank=True, db_column='AVG_HEIGHT', null=True)),
                ('max_height', models.FloatField(blank=True, db_column='MAX_HEIGHT', null=True)),
                ('min_height', models.FloatField(blank=True, db_column='MIN_HEIGHT', null=True)),
                ('height_src', models.TextField(blank=True, db_column='HEIGHT_SRC', null=True)),
                ('heightconf', models.TextField(blank=True, db_column='HEIGHTCONF', null=True)),
                ('surf_elev', models.FloatField(blank=True, db_column='SURF_ELEV', null=True)),
                ('surf_off', models.FloatField(blank=True, db_column='SURF_OFF', null=True)),
                ('surf_adj', models.FloatField(blank=True, db_column='SURF_ADJ', null=True)),
                ('surf_src', models.TextField(blank=True, db_column='SURF_SRC', null=True)),
                ('roof_elev', models.FloatField(blank=True, db_column='ROOF_ELEV', null=True)),
                ('roof_type', models.TextField(blank=True, db_column='ROOF_TYPE', null=True)),
                ('orient', models.FloatField(blank=True, db_column='ORIENT', null=True)),
                ('volume', models.FloatField(blank=True, db_column='VOLUME', null=True)),
                ('multi_poly', models.TextField(blank=True, db_column='MULTI_POLY', null=True)),
                ('modifier', models.TextField(blank=True, db_column='MODIFIER', null=True)),
                ('mod_name', models.TextField(blank=True, db_column='MOD_NAME', null=True)),
                ('mod_date', models.TextField(blank=True, db_column='MOD_DATE', null=True)),
                ('created_by', models.TextField(blank=True, db_column='CREATED_BY', null=True)),
                ('createdate', models.TextField(blank=True, db_column='CREATEDATE', null=True)),
                ('field_date', models.TextField(blank=True, db_column='FIELD_DATE', null=True)),
                ('review', models.TextField(blank=True, db_column='REVIEW', null=True)),
                ('notes', models.TextField(blank=True, db_column='NOTES', null=True)),
                ('subarea', models.TextField(blank=True, db_column='SUBAREA', null=True)),
                ('lat_ctr', models.FloatField(blank=True, db_column='LAT_CTR', null=True)),
                ('long_ctr', models.FloatField(blank=True, db_column='LONG_CTR', null=True)),
                ('usgs_quad', models.TextField(blank=True, db_column='USGS_QUAD', null=True)),
                ('wsuniqueid', models.TextField(blank=True, db_column='WSUNIQUEID', null=True)),
                ('bps_bldgid', models.FloatField(blank=True, db_column='BPS_BLDGID', null=True)),
                ('area', models.FloatField(blank=True, db_column='AREA', null=True)),
                ('length', models.FloatField(blank=True, db_column='LENGTH', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'buildings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CostarMultifamilyRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_address', models.TextField(blank=True, null=True)),
                ('property_name', models.TextField(blank=True, null=True)),
                ('star_rating', models.BigIntegerField(blank=True, null=True)),
                ('energy_star', models.TextField(blank=True, null=True)),
                ('leed_certified', models.TextField(blank=True, null=True)),
                ('building_status', models.TextField(blank=True, null=True)),
                ('rba', models.FloatField(blank=True, null=True)),
                ('secondary_type', models.TextField(blank=True, null=True)),
                ('market_name', models.TextField(blank=True, null=True)),
                ('submarket_name', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('county_name', models.TextField(blank=True, null=True)),
                ('for_sale_price', models.FloatField(blank=True, null=True)),
                ('for_sale_status', models.TextField(blank=True, null=True)),
                ('year_built', models.BigIntegerField(blank=True, null=True)),
                ('year_renovated', models.FloatField(blank=True, null=True)),
                ('building_park', models.TextField(blank=True, null=True)),
                ('zoning', models.TextField(blank=True, null=True)),
                ('number_of_units', models.BigIntegerField(blank=True, null=True)),
                ('style', models.TextField(blank=True, null=True)),
                ('total_buildings', models.FloatField(blank=True, null=True)),
                ('number_of_stories', models.FloatField(blank=True, null=True)),
                ('price_unit', models.FloatField(blank=True, null=True)),
                ('cap_rate', models.FloatField(blank=True, null=True)),
                ('vacancy_pct', models.FloatField(blank=True, null=True)),
                ('avg_unit_sf', models.FloatField(blank=True, null=True)),
                ('avg_asking_unit', models.FloatField(blank=True, null=True)),
                ('avg_asking_sf', models.FloatField(blank=True, null=True)),
                ('avg_effective_unit', models.FloatField(blank=True, null=True)),
                ('avg_effective_sf', models.FloatField(blank=True, null=True)),
                ('avg_concessions_pct', models.FloatField(blank=True, null=True)),
                ('pct_studios', models.FloatField(blank=True, null=True)),
                ('pct_1_bed', models.FloatField(blank=True, null=True)),
                ('pct_2_bed', models.FloatField(blank=True, null=True)),
                ('pct_3_bed', models.FloatField(blank=True, null=True)),
                ('pct_4_bed', models.FloatField(blank=True, null=True)),
                ('rent_type', models.TextField(blank=True, null=True)),
                ('affordable_type', models.TextField(blank=True, null=True)),
                ('market_segment', models.TextField(blank=True, null=True)),
                ('parking_spaces_unit', models.FloatField(blank=True, null=True)),
                ('number_of_parking_spaces', models.FloatField(blank=True, null=True)),
                ('days_on_market', models.FloatField(blank=True, null=True)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('anchor_gla', models.FloatField(blank=True, null=True)),
                ('anchor_tenants', models.TextField(blank=True, null=True)),
                ('architect_name', models.TextField(blank=True, null=True)),
                ('average_weighted_rent', models.TextField(blank=True, null=True)),
                ('avg_asking_bed', models.FloatField(blank=True, null=True)),
                ('avg_rent_direct_industrial', models.FloatField(blank=True, null=True)),
                ('avg_rent_direct_office', models.FloatField(blank=True, null=True)),
                ('avg_rent_direct_retail', models.FloatField(blank=True, null=True)),
                ('avg_rent_sublet_industrial', models.FloatField(blank=True, null=True)),
                ('avg_rent_sublet_office', models.FloatField(blank=True, null=True)),
                ('avg_rent_sublet_retail', models.FloatField(blank=True, null=True)),
                ('building_class', models.TextField(blank=True, null=True)),
                ('building_operating_expenses', models.TextField(blank=True, null=True)),
                ('building_tax_expenses', models.TextField(blank=True, null=True)),
                ('ceiling_height_range', models.FloatField(blank=True, null=True)),
                ('closest_transit_stop', models.TextField(blank=True, null=True)),
                ('closest_transit_stop_dist_mi', models.FloatField(blank=True, null=True)),
                ('closest_transit_stop_walk_time_min', models.FloatField(blank=True, null=True)),
                ('column_spacing', models.FloatField(blank=True, null=True)),
                ('construction_material', models.TextField(blank=True, null=True)),
                ('core_factor', models.FloatField(blank=True, null=True)),
                ('cross_street', models.TextField(blank=True, null=True)),
                ('developer_name', models.TextField(blank=True, null=True)),
                ('direct_available_space', models.FloatField(blank=True, null=True)),
                ('direct_services', models.TextField(blank=True, null=True)),
                ('direct_vacant_space', models.BigIntegerField(blank=True, null=True)),
                ('drive_ins', models.TextField(blank=True, null=True)),
                ('exp_year', models.FloatField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('four_bedroom_asking_rent_bed', models.FloatField(blank=True, null=True)),
                ('four_bedroom_asking_rent_sf', models.FloatField(blank=True, null=True)),
                ('four_bedroom_asking_rent_unit', models.FloatField(blank=True, null=True)),
                ('four_bedroom_avg_sf', models.FloatField(blank=True, null=True)),
                ('four_bedroom_concessions_pct', models.FloatField(blank=True, null=True)),
                ('four_bedroom_effective_rent_bed', models.FloatField(blank=True, null=True)),
                ('four_bedroom_effective_rent_sf', models.FloatField(blank=True, null=True)),
                ('four_bedroom_effective_rent_unit', models.FloatField(blank=True, null=True)),
                ('four_bedroom_vacancy_pct', models.FloatField(blank=True, null=True)),
                ('four_bedroom_vacant_units', models.FloatField(blank=True, null=True)),
                ('gas', models.FloatField(blank=True, null=True)),
                ('heating', models.FloatField(blank=True, null=True)),
                ('land_area_ac', models.FloatField(blank=True, null=True)),
                ('land_area_sf', models.FloatField(blank=True, null=True)),
                ('last_sale_date', models.DateTimeField(blank=True, null=True)),
                ('last_sale_price', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('leasing_company_address', models.TextField(blank=True, null=True)),
                ('leasing_company_city_state_zip', models.TextField(blank=True, null=True)),
                ('leasing_company_contact', models.TextField(blank=True, null=True)),
                ('leasing_company_fax', models.FloatField(blank=True, null=True)),
                ('leasing_company_name', models.TextField(blank=True, null=True)),
                ('leasing_company_phone', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('max_building_contiguous_space', models.FloatField(blank=True, null=True)),
                ('max_floor_contiguous_space', models.FloatField(blank=True, null=True)),
                ('number_of_1_bedrooms_units', models.FloatField(blank=True, null=True)),
                ('number_of_2_bedrooms_units', models.FloatField(blank=True, null=True)),
                ('number_of_3_bedrooms_units', models.FloatField(blank=True, null=True)),
                ('number_of_4_bedrooms_units', models.FloatField(blank=True, null=True)),
                ('number_of_beds', models.FloatField(blank=True, null=True)),
                ('number_of_cranes', models.FloatField(blank=True, null=True)),
                ('number_of_elevators', models.BigIntegerField(blank=True, null=True)),
                ('number_of_loading_docks', models.FloatField(blank=True, null=True)),
                ('number_of_rooms', models.FloatField(blank=True, null=True)),
                ('number_of_studios_units', models.FloatField(blank=True, null=True)),
                ('office_space', models.FloatField(blank=True, null=True)),
                ('one_bedroom_asking_rent_bed', models.FloatField(blank=True, null=True)),
                ('one_bedroom_asking_rent_sf', models.FloatField(blank=True, null=True)),
                ('one_bedroom_asking_rent_unit', models.FloatField(blank=True, null=True)),
                ('one_bedroom_avg_sf', models.FloatField(blank=True, null=True)),
                ('one_bedroom_concessions_pct', models.FloatField(blank=True, null=True)),
                ('one_bedroom_effective_rent_bed', models.FloatField(blank=True, null=True)),
                ('one_bedroom_effective_rent_sf', models.FloatField(blank=True, null=True)),
                ('one_bedroom_effective_rent_unit', models.FloatField(blank=True, null=True)),
                ('one_bedroom_vacancy_pct', models.FloatField(blank=True, null=True)),
                ('one_bedroom_vacant_units', models.FloatField(blank=True, null=True)),
                ('ops_expense', models.FloatField(blank=True, null=True)),
                ('ops_expense_per_sf', models.FloatField(blank=True, null=True)),
                ('owner_address', models.TextField(blank=True, null=True)),
                ('owner_city_state_zip', models.TextField(blank=True, null=True)),
                ('owner_contact', models.TextField(blank=True, null=True)),
                ('owner_name', models.TextField(blank=True, null=True)),
                ('owner_phone', models.FloatField(blank=True, null=True)),
                ('parcel_number_1min', models.TextField(blank=True, null=True)),
                ('parcel_number_2max', models.TextField(blank=True, null=True)),
                ('parking_ratio', models.FloatField(blank=True, null=True)),
                ('percent_leased', models.FloatField(blank=True, null=True)),
                ('power', models.FloatField(blank=True, null=True)),
                ('pre_leasing', models.FloatField(blank=True, null=True)),
                ('primary_agent_name', models.TextField(blank=True, null=True)),
                ('property_location', models.TextField(blank=True, null=True)),
                ('property_manager_address', models.TextField(blank=True, null=True)),
                ('property_manager_city_state_zip', models.TextField(blank=True, null=True)),
                ('property_manager_contact', models.TextField(blank=True, null=True)),
                ('property_manager_name', models.TextField(blank=True, null=True)),
                ('property_manager_phone', models.FloatField(blank=True, null=True)),
                ('propertyid', models.BigIntegerField(blank=True, null=True)),
                ('propertytype', models.TextField(blank=True, null=True)),
                ('proposed_land_use', models.FloatField(blank=True, null=True)),
                ('rail_lines', models.FloatField(blank=True, null=True)),
                ('recorded_owner_address', models.TextField(blank=True, null=True)),
                ('recorded_owner_city_state_zip', models.TextField(blank=True, null=True)),
                ('recorded_owner_contact', models.TextField(blank=True, null=True)),
                ('recorded_owner_name', models.TextField(blank=True, null=True)),
                ('recorded_owner_phone', models.FloatField(blank=True, null=True)),
                ('rent_sf_yr', models.TextField(blank=True, null=True)),
                ('sale_company_address', models.TextField(blank=True, null=True)),
                ('sale_company_city_state_zip', models.TextField(blank=True, null=True)),
                ('sale_company_contact', models.TextField(blank=True, null=True)),
                ('sale_company_fax', models.FloatField(blank=True, null=True)),
                ('sale_company_name', models.TextField(blank=True, null=True)),
                ('sale_company_phone', models.FloatField(blank=True, null=True)),
                ('sales_company', models.TextField(blank=True, null=True)),
                ('sales_contact', models.TextField(blank=True, null=True)),
                ('sales_contact_phone', models.FloatField(blank=True, null=True)),
                ('services', models.TextField(blank=True, null=True)),
                ('sewer', models.TextField(blank=True, null=True)),
                ('smallest_available_space', models.FloatField(blank=True, null=True)),
                ('sprinklers', models.TextField(blank=True, null=True)),
                ('studio_asking_rent_bed', models.FloatField(blank=True, null=True)),
                ('studio_asking_rent_sf', models.FloatField(blank=True, null=True)),
                ('studio_asking_rent_unit', models.FloatField(blank=True, null=True)),
                ('studio_avg_sf', models.FloatField(blank=True, null=True)),
                ('studio_concessions_pct', models.FloatField(blank=True, null=True)),
                ('studio_effective_rent_bed', models.FloatField(blank=True, null=True)),
                ('studio_effective_rent_sf', models.FloatField(blank=True, null=True)),
                ('studio_effective_rent_unit', models.FloatField(blank=True, null=True)),
                ('studio_vacancy_pct', models.FloatField(blank=True, null=True)),
                ('studio_vacant_units', models.FloatField(blank=True, null=True)),
                ('sublet_available_space', models.FloatField(blank=True, null=True)),
                ('sublet_services', models.FloatField(blank=True, null=True)),
                ('sublet_vacant_space', models.BigIntegerField(blank=True, null=True)),
                ('submarket_cluster', models.TextField(blank=True, null=True)),
                ('tax_year', models.FloatField(blank=True, null=True)),
                ('taxes_per_sf', models.FloatField(blank=True, null=True)),
                ('taxes_total', models.FloatField(blank=True, null=True)),
                ('tenancy', models.TextField(blank=True, null=True)),
                ('three_bedroom_asking_rent_bed', models.FloatField(blank=True, null=True)),
                ('three_bedroom_asking_rent_sf', models.FloatField(blank=True, null=True)),
                ('three_bedroom_asking_rent_unit', models.FloatField(blank=True, null=True)),
                ('three_bedroom_avg_sf', models.FloatField(blank=True, null=True)),
                ('three_bedroom_concessions_pct', models.FloatField(blank=True, null=True)),
                ('three_bedroom_effective_rent_bed', models.FloatField(blank=True, null=True)),
                ('three_bedroom_effective_rent_sf', models.FloatField(blank=True, null=True)),
                ('three_bedroom_effective_rent_unit', models.FloatField(blank=True, null=True)),
                ('three_bedroom_vacancy_pct', models.FloatField(blank=True, null=True)),
                ('three_bedroom_vacant_units', models.FloatField(blank=True, null=True)),
                ('total_available_space_sf', models.FloatField(blank=True, null=True)),
                ('total_new_space_sf', models.FloatField(blank=True, null=True)),
                ('total_relet_space_sf', models.FloatField(blank=True, null=True)),
                ('total_sublet_space_sf', models.FloatField(blank=True, null=True)),
                ('total_vacant_avail_relet_space_sf', models.FloatField(blank=True, null=True)),
                ('total_vacant_avail_sublet_space_sf', models.FloatField(blank=True, null=True)),
                ('total_vacant_available', models.FloatField(blank=True, null=True)),
                ('true_owner_address', models.TextField(blank=True, null=True)),
                ('true_owner_city_state_zip', models.TextField(blank=True, null=True)),
                ('true_owner_contact', models.TextField(blank=True, null=True)),
                ('true_owner_name', models.TextField(blank=True, null=True)),
                ('true_owner_phone', models.FloatField(blank=True, null=True)),
                ('two_bedroom_asking_rent_bed', models.FloatField(blank=True, null=True)),
                ('two_bedroom_asking_rent_sf', models.FloatField(blank=True, null=True)),
                ('two_bedroom_asking_rent_unit', models.FloatField(blank=True, null=True)),
                ('two_bedroom_avg_sf', models.FloatField(blank=True, null=True)),
                ('two_bedroom_concessions_pct', models.FloatField(blank=True, null=True)),
                ('two_bedroom_effective_rent_bed', models.FloatField(blank=True, null=True)),
                ('two_bedroom_effective_rent_sf', models.FloatField(blank=True, null=True)),
                ('two_bedroom_effective_rent_unit', models.FloatField(blank=True, null=True)),
                ('two_bedroom_vacancy_pct', models.FloatField(blank=True, null=True)),
                ('two_bedroom_vacant_units', models.FloatField(blank=True, null=True)),
                ('typical_floor_size', models.FloatField(blank=True, null=True)),
                ('university', models.TextField(blank=True, null=True)),
                ('water', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'costar_multifamily_rent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fwy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('prefix', models.TextField(blank=True, db_column='PREFIX', null=True)),
                ('streetname', models.TextField(blank=True, db_column='STREETNAME', null=True)),
                ('ftype', models.TextField(blank=True, db_column='FTYPE', null=True)),
                ('type', models.BigIntegerField(blank=True, db_column='TYPE', null=True)),
                ('length', models.FloatField(blank=True, db_column='LENGTH', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'fwy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JoinedAduPermitsToTaxlots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tlid', models.TextField(blank=True, db_column='TLID', null=True)),
                ('primaccnum', models.TextField(blank=True, db_column='PRIMACCNUM', null=True)),
                ('altaccnum', models.TextField(blank=True, db_column='ALTACCNUM', null=True)),
                ('siteaddr', models.TextField(blank=True, db_column='SITEADDR', null=True)),
                ('sitecity', models.TextField(blank=True, db_column='SITECITY', null=True)),
                ('sitezip', models.TextField(blank=True, db_column='SITEZIP', null=True)),
                ('landval', models.BigIntegerField(blank=True, db_column='LANDVAL', null=True)),
                ('bldgval', models.BigIntegerField(blank=True, db_column='BLDGVAL', null=True)),
                ('totalval', models.BigIntegerField(blank=True, db_column='TOTALVAL', null=True)),
                ('bldgsqft', models.FloatField(blank=True, db_column='BLDGSQFT', null=True)),
                ('a_t_acres', models.FloatField(blank=True, db_column='A_T_ACRES', null=True)),
                ('yearbuilt', models.BigIntegerField(blank=True, db_column='YEARBUILT', null=True)),
                ('landuse', models.TextField(blank=True, db_column='LANDUSE', null=True)),
                ('saledate', models.TextField(blank=True, db_column='SALEDATE', null=True)),
                ('saleprice', models.BigIntegerField(blank=True, db_column='SALEPRICE', null=True)),
                ('county_x', models.TextField(blank=True, db_column='COUNTY_x', null=True)),
                ('x_coord', models.BigIntegerField(blank=True, db_column='X_COORD', null=True)),
                ('y_coord', models.BigIntegerField(blank=True, db_column='Y_COORD', null=True)),
                ('gis_acres', models.FloatField(blank=True, db_column='GIS_ACRES', null=True)),
                ('ortaxlot', models.TextField(blank=True, db_column='ORTAXLOT', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=3857)),
                ('ivr_number', models.BigIntegerField(blank=True, db_column='IVR_NUMBER', null=True)),
                ('application_number', models.TextField(blank=True, db_column='APPLICATION_NUMBER', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
                ('work', models.TextField(blank=True, db_column='WORK', null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('state_id', models.TextField(blank=True, db_column='STATE_ID', null=True)),
                ('property_id', models.TextField(blank=True, db_column='PROPERTY_ID', null=True)),
                ('set_up', models.TextField(blank=True, db_column='SET_UP', null=True)),
                ('under_review', models.TextField(blank=True, db_column='UNDER_REVIEW', null=True)),
                ('issued', models.DateTimeField(blank=True, db_column='ISSUED', null=True)),
                ('neighborhood', models.TextField(blank=True, db_column='NEIGHBORHOOD', null=True)),
                ('neighborhood_coalition', models.TextField(blank=True, db_column='NEIGHBORHOOD_COALITION', null=True)),
                ('business_association', models.TextField(blank=True, db_column='BUSINESS_ASSOCIATION', null=True)),
                ('county_y', models.TextField(blank=True, db_column='COUNTY_y', null=True)),
                ('x_web_mercator', models.FloatField(blank=True, db_column='X_WEB_MERCATOR', null=True)),
                ('y_web_mercator', models.FloatField(blank=True, db_column='Y_WEB_MERCATOR', null=True)),
                ('ccb_number', models.TextField(blank=True, db_column='CCB_NUMBER', null=True)),
                ('occupancy_group', models.TextField(blank=True, db_column='OCCUPANCY_GROUP', null=True)),
                ('construction_type', models.TextField(blank=True, db_column='CONSTRUCTION_TYPE', null=True)),
                ('submitted_valuation', models.FloatField(blank=True, db_column='SUBMITTED_VALUATION', null=True)),
                ('final_valuation', models.FloatField(blank=True, db_column='FINAL_VALUATION', null=True)),
                ('new_units', models.FloatField(blank=True, db_column='NEW_UNITS', null=True)),
                ('total_sqft', models.FloatField(blank=True, db_column='TOTAL_SQFT', null=True)),
                ('stories', models.FloatField(blank=True, db_column='STORIES', null=True)),
                ('customer', models.FloatField(blank=True, db_column='CUSTOMER', null=True)),
                ('days_from_issued_to_final', models.FloatField(blank=True, null=True)),
                ('permit_month', models.FloatField(blank=True, null=True)),
                ('permit_year', models.FloatField(blank=True, null=True)),
                ('address_unit_a', models.BooleanField(blank=True, db_column='address_unit_A', null=True)),
                ('sale_year', models.FloatField(blank=True, null=True)),
                ('sale_month', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'joined_adu_permits_to_taxlots',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LrtStop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('station', models.TextField(blank=True, db_column='STATION', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('line', models.TextField(blank=True, db_column='LINE', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'lrt_stop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MfInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('juris_city', models.TextField(blank=True, db_column='JURIS_CITY', null=True)),
                ('mail_city', models.TextField(blank=True, db_column='MAIL_CITY', null=True)),
                ('state', models.TextField(blank=True, db_column='STATE', null=True)),
                ('units', models.BigIntegerField(blank=True, db_column='UNITS', null=True)),
                ('zipcode', models.TextField(blank=True, db_column='ZIPCODE', null=True)),
                ('unit_type', models.TextField(blank=True, db_column='UNIT_TYPE', null=True)),
                ('county', models.TextField(blank=True, db_column='COUNTY', null=True)),
                ('mixed_use', models.BigIntegerField(blank=True, db_column='MIXED_USE', null=True)),
                ('yearbuilt', models.BigIntegerField(blank=True, db_column='YEARBUILT', null=True)),
                ('commonname', models.TextField(blank=True, db_column='COMMONNAME', null=True)),
                ('datasource', models.TextField(blank=True, db_column='DATASOURCE', null=True)),
                ('confidence', models.TextField(blank=True, db_column='CONFIDENCE', null=True)),
                ('metro_id', models.BigIntegerField(blank=True, db_column='METRO_ID', null=True)),
                ('area', models.FloatField(blank=True, db_column='AREA', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'mf_inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parkride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('station', models.TextField(blank=True, db_column='STATION', null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('city', models.TextField(blank=True, db_column='CITY', null=True)),
                ('zipcode', models.TextField(blank=True, db_column='ZIPCODE', null=True)),
                ('county', models.TextField(blank=True, db_column='COUNTY', null=True)),
                ('owner', models.TextField(blank=True, db_column='OWNER', null=True)),
                ('spaces', models.BigIntegerField(blank=True, db_column='SPACES', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'parkride',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('ivr_number', models.BigIntegerField(blank=True, db_column='IVR_NUMBER', null=True)),
                ('application_number', models.TextField(blank=True, db_column='APPLICATION_NUMBER', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
                ('work', models.TextField(blank=True, db_column='WORK', null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('state_id', models.TextField(blank=True, db_column='STATE_ID', null=True)),
                ('property_id', models.TextField(blank=True, db_column='PROPERTY_ID', null=True)),
                ('set_up', models.TextField(blank=True, db_column='SET_UP', null=True)),
                ('under_review', models.TextField(blank=True, db_column='UNDER_REVIEW', null=True)),
                ('issued', models.TextField(blank=True, db_column='ISSUED', null=True)),
                ('final', models.TextField(blank=True, db_column='FINAL', null=True)),
                ('neighborhood', models.TextField(blank=True, db_column='NEIGHBORHOOD', null=True)),
                ('neighborhood_coalition', models.TextField(blank=True, db_column='NEIGHBORHOOD_COALITION', null=True)),
                ('business_association', models.TextField(blank=True, db_column='BUSINESS_ASSOCIATION', null=True)),
                ('county', models.TextField(blank=True, db_column='COUNTY', null=True)),
                ('x_web_mercator', models.FloatField(blank=True, db_column='X_WEB_MERCATOR', null=True)),
                ('y_web_mercator', models.FloatField(blank=True, db_column='Y_WEB_MERCATOR', null=True)),
                ('ccb_number', models.TextField(blank=True, db_column='CCB_NUMBER', null=True)),
                ('occupancy_group', models.TextField(blank=True, db_column='OCCUPANCY_GROUP', null=True)),
                ('construction_type', models.TextField(blank=True, db_column='CONSTRUCTION_TYPE', null=True)),
                ('submitted_valuation', models.FloatField(blank=True, db_column='SUBMITTED_VALUATION', null=True)),
                ('final_valuation', models.FloatField(blank=True, db_column='FINAL_VALUATION', null=True)),
                ('new_units', models.FloatField(blank=True, db_column='NEW_UNITS', null=True)),
                ('total_sqft', models.FloatField(blank=True, db_column='TOTAL_SQFT', null=True)),
                ('stories', models.FloatField(blank=True, db_column='STORIES', null=True)),
                ('customer', models.FloatField(blank=True, db_column='CUSTOMER', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3857)),
            ],
            options={
                'db_table': 'permits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PotentialAduParcels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tlid', models.TextField(blank=True, db_column='TLID', null=True)),
                ('primaccnum', models.TextField(blank=True, db_column='PRIMACCNUM', null=True)),
                ('altaccnum', models.TextField(blank=True, db_column='ALTACCNUM', null=True)),
                ('siteaddr', models.TextField(blank=True, db_column='SITEADDR', null=True)),
                ('sitecity', models.TextField(blank=True, db_column='SITECITY', null=True)),
                ('sitezip', models.TextField(blank=True, db_column='SITEZIP', null=True)),
                ('landval', models.BigIntegerField(blank=True, db_column='LANDVAL', null=True)),
                ('bldgval', models.BigIntegerField(blank=True, db_column='BLDGVAL', null=True)),
                ('totalval', models.BigIntegerField(blank=True, db_column='TOTALVAL', null=True)),
                ('bldgsqft', models.FloatField(blank=True, db_column='BLDGSQFT', null=True)),
                ('a_t_acres', models.FloatField(blank=True, db_column='A_T_ACRES', null=True)),
                ('yearbuilt', models.BigIntegerField(blank=True, db_column='YEARBUILT', null=True)),
                ('saledate', models.TextField(blank=True, db_column='SALEDATE', null=True)),
                ('saleprice', models.BigIntegerField(blank=True, db_column='SALEPRICE', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=2913)),
                ('index_right', models.FloatField(blank=True, null=True)),
                ('bldg_id', models.TextField(blank=True, db_column='BLDG_ID', null=True)),
                ('state_id', models.TextField(blank=True, db_column='STATE_ID', null=True)),
                ('bldg_numb', models.FloatField(blank=True, db_column='BLDG_NUMB', null=True)),
                ('bldg_addr', models.TextField(blank=True, db_column='BLDG_ADDR', null=True)),
                ('bldg_sqft', models.FloatField(blank=True, db_column='BLDG_SQFT', null=True)),
                ('num_story', models.FloatField(blank=True, db_column='NUM_STORY', null=True)),
                ('num_units', models.FloatField(blank=True, db_column='NUM_UNITS', null=True)),
                ('year_built', models.FloatField(blank=True, db_column='YEAR_BUILT', null=True)),
                ('bldg_footprint_sq_ft', models.FloatField(blank=True, null=True)),
                ('parcel_sqft', models.FloatField(blank=True, null=True)),
                ('geoid', models.TextField(blank=True, db_column='GEOID', null=True)),
                ('one_bed_rent_sf', models.FloatField(blank=True, null=True)),
                ('two_bed_rent_sf', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'potential_adu_parcels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Railroad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, db_column='LENGTH', null=True)),
                ('owner_abrv', models.TextField(blank=True, db_column='OWNER_ABRV', null=True)),
                ('owner', models.TextField(blank=True, db_column='OWNER', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'railroad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolDistrict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distno', models.TextField(blank=True, db_column='DISTNO', null=True)),
                ('distname', models.TextField(blank=True, db_column='DISTNAME', null=True)),
                ('distinstid', models.BigIntegerField(blank=True, db_column='DISTINSTID', null=True)),
                ('ncesdistid', models.BigIntegerField(blank=True, db_column='NCESDISTID', null=True)),
                ('area', models.FloatField(blank=True, db_column='AREA', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'school_district',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schools',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('school_id', models.BigIntegerField(blank=True, db_column='SCHOOL_ID', null=True)),
                ('schinstid', models.FloatField(blank=True, db_column='SCHINSTID', null=True)),
                ('distinstid', models.FloatField(blank=True, db_column='DISTINSTID', null=True)),
                ('ncesschid', models.FloatField(blank=True, db_column='NCESSCHID', null=True)),
                ('ncesdistid', models.FloatField(blank=True, db_column='NCESDISTID', null=True)),
                ('site_id', models.FloatField(blank=True, db_column='SITE_ID', null=True)),
                ('primaryuse', models.FloatField(blank=True, db_column='PRIMARYUSE', null=True)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('address2', models.TextField(blank=True, db_column='ADDRESS2', null=True)),
                ('city', models.TextField(blank=True, db_column='CITY', null=True)),
                ('state', models.TextField(blank=True, db_column='STATE', null=True)),
                ('zipcode', models.TextField(blank=True, db_column='ZIPCODE', null=True)),
                ('zip4', models.TextField(blank=True, db_column='ZIP4', null=True)),
                ('phone', models.TextField(blank=True, db_column='PHONE', null=True)),
                ('level_no', models.BigIntegerField(blank=True, db_column='LEVEL_NO', null=True)),
                ('level_name', models.TextField(blank=True, db_column='LEVEL_NAME', null=True)),
                ('dist_no', models.TextField(blank=True, db_column='DIST_NO', null=True)),
                ('district', models.TextField(blank=True, db_column='DISTRICT', null=True)),
                ('grade', models.TextField(blank=True, db_column='GRADE', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('county', models.TextField(blank=True, db_column='COUNTY', null=True)),
                ('updatedate', models.TextField(blank=True, db_column='UPDATEDATE', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'schools',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxlots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.FloatField(blank=True, db_column='AREA', null=True)),
                ('tlid', models.TextField(blank=True, db_column='TLID', null=True)),
                ('primaccnum', models.TextField(blank=True, db_column='PRIMACCNUM', null=True)),
                ('altaccnum', models.TextField(blank=True, db_column='ALTACCNUM', null=True)),
                ('ownersort', models.TextField(blank=True, db_column='OWNERSORT', null=True)),
                ('owner1', models.TextField(blank=True, db_column='OWNER1', null=True)),
                ('owner2', models.TextField(blank=True, db_column='OWNER2', null=True)),
                ('owneraddr', models.TextField(blank=True, db_column='OWNERADDR', null=True)),
                ('owneraddr2', models.TextField(blank=True, db_column='OWNERADDR2', null=True)),
                ('ownercity', models.TextField(blank=True, db_column='OWNERCITY', null=True)),
                ('ownerstate', models.TextField(blank=True, db_column='OWNERSTATE', null=True)),
                ('ownerzip', models.TextField(blank=True, db_column='OWNERZIP', null=True)),
                ('siteaddr', models.TextField(blank=True, db_column='SITEADDR', null=True)),
                ('sitecity', models.TextField(blank=True, db_column='SITECITY', null=True)),
                ('sitezip', models.TextField(blank=True, db_column='SITEZIP', null=True)),
                ('landval', models.BigIntegerField(blank=True, db_column='LANDVAL', null=True)),
                ('bldgval', models.BigIntegerField(blank=True, db_column='BLDGVAL', null=True)),
                ('totalval', models.BigIntegerField(blank=True, db_column='TOTALVAL', null=True)),
                ('bldgsqft', models.FloatField(blank=True, db_column='BLDGSQFT', null=True)),
                ('a_t_acres', models.FloatField(blank=True, db_column='A_T_ACRES', null=True)),
                ('yearbuilt', models.BigIntegerField(blank=True, db_column='YEARBUILT', null=True)),
                ('prop_code', models.TextField(blank=True, db_column='PROP_CODE', null=True)),
                ('landuse', models.TextField(blank=True, db_column='LANDUSE', null=True)),
                ('taxcode', models.TextField(blank=True, db_column='TAXCODE', null=True)),
                ('saledate', models.TextField(blank=True, db_column='SALEDATE', null=True)),
                ('saleprice', models.BigIntegerField(blank=True, db_column='SALEPRICE', null=True)),
                ('county', models.TextField(blank=True, db_column='COUNTY', null=True)),
                ('x_coord', models.BigIntegerField(blank=True, db_column='X_COORD', null=True)),
                ('y_coord', models.BigIntegerField(blank=True, db_column='Y_COORD', null=True)),
                ('juris_city', models.TextField(blank=True, db_column='JURIS_CITY', null=True)),
                ('gis_acres', models.FloatField(blank=True, db_column='GIS_ACRES', null=True)),
                ('stateclass', models.TextField(blank=True, db_column='STATECLASS', null=True)),
                ('ortaxlot', models.TextField(blank=True, db_column='ORTAXLOT', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'taxlots',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TlMany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('tlid_long', models.TextField(blank=True, db_column='TLID_LONG', null=True)),
                ('tlid', models.TextField(blank=True, db_column='TLID', null=True)),
                ('primaccnum', models.TextField(blank=True, db_column='PRIMACCNUM', null=True)),
                ('altaccnum', models.TextField(blank=True, db_column='ALTACCNUM', null=True)),
                ('ownersort', models.TextField(blank=True, db_column='OWNERSORT', null=True)),
                ('owner1', models.TextField(blank=True, db_column='OWNER1', null=True)),
                ('owner2', models.TextField(blank=True, db_column='OWNER2', null=True)),
                ('owneraddr', models.TextField(blank=True, db_column='OWNERADDR', null=True)),
                ('owneraddr2', models.TextField(blank=True, db_column='OWNERADDR2', null=True)),
                ('ownercity', models.TextField(blank=True, db_column='OWNERCITY', null=True)),
                ('ownerstate', models.TextField(blank=True, db_column='OWNERSTATE', null=True)),
                ('ownerzip', models.TextField(blank=True, db_column='OWNERZIP', null=True)),
                ('siteaddr', models.TextField(blank=True, db_column='SITEADDR', null=True)),
                ('sitecity', models.TextField(blank=True, db_column='SITECITY', null=True)),
                ('sitezip', models.TextField(blank=True, db_column='SITEZIP', null=True)),
                ('landval', models.BigIntegerField(blank=True, db_column='LANDVAL', null=True)),
                ('bldgval', models.BigIntegerField(blank=True, db_column='BLDGVAL', null=True)),
                ('totalval', models.BigIntegerField(blank=True, db_column='TOTALVAL', null=True)),
                ('bldgsqft', models.BigIntegerField(blank=True, db_column='BLDGSQFT', null=True)),
                ('a_t_acres', models.FloatField(blank=True, db_column='A_T_ACRES', null=True)),
                ('yearbuilt', models.BigIntegerField(blank=True, db_column='YEARBUILT', null=True)),
                ('prop_code', models.TextField(blank=True, db_column='PROP_CODE', null=True)),
                ('landuse', models.TextField(blank=True, db_column='LANDUSE', null=True)),
                ('taxcode', models.TextField(blank=True, db_column='TAXCODE', null=True)),
                ('saledate', models.TextField(blank=True, db_column='SALEDATE', null=True)),
                ('saleprice', models.BigIntegerField(blank=True, db_column='SALEPRICE', null=True)),
                ('county', models.TextField(blank=True, db_column='COUNTY', null=True)),
                ('x_coord', models.FloatField(blank=True, db_column='X_COORD', null=True)),
                ('y_coord', models.FloatField(blank=True, db_column='Y_COORD', null=True)),
                ('juris_city', models.TextField(blank=True, db_column='JURIS_CITY', null=True)),
                ('stateclass', models.TextField(blank=True, db_column='STATECLASS', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'tl_many',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1, unique=True)),
                ('srid', models.IntegerField()),
                ('precision', models.FloatField()),
                ('hasz', models.BooleanField()),
            ],
            options={
                'db_table': 'topology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zoning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('city_no', models.BigIntegerField(blank=True, db_column='CITY_NO', null=True)),
                ('zone', models.TextField(blank=True, db_column='ZONE', null=True)),
                ('zone_class', models.TextField(blank=True, db_column='ZONE_CLASS', null=True)),
                ('zonegen_cl', models.TextField(blank=True, db_column='ZONEGEN_CL', null=True)),
                ('city', models.TextField(blank=True, db_column='CITY', null=True)),
                ('area', models.FloatField(blank=True, db_column='AREA', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=2913)),
            ],
            options={
                'db_table': 'zoning',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Parcels',
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('topology', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='feasibility.topology')),
                ('layer_id', models.IntegerField()),
                ('schema_name', models.CharField(max_length=1)),
                ('table_name', models.CharField(max_length=1)),
                ('feature_column', models.CharField(max_length=1)),
                ('feature_type', models.IntegerField()),
                ('level', models.IntegerField()),
                ('child_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'layer',
                'managed': False,
            },
        ),
    ]
